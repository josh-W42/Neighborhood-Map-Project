{"version":3,"sources":["SideUI.js","Map.js","serviceWorker.js","App.js","index.js"],"names":["foursquare","require","clientID","process","clientSecret","SideUI","state","activeRadio","places","_this","props","filteredArrayReady","input","_this2","this","setState","onFilterClose","map","options","ll","concat","center","lat","lng","query","sortByDistance","venues","explore","then","results","onMapUpdate","panTo","response","groups","items","venue","location","catch","status","alert","console","log","catagory","_this3","radius","section","error","place","onResultClick","categories","length","placeIcon","icon","prefix","suffix","filterOption","filteredArray","filter","name","includes","onFilterUpdate","placeArray","_this4","react_default","a","createElement","id","className","tabIndex","type","placeholder","aria-label","value","onClick","e","preventDefault","onSearch","document","querySelector","onChange","onNearbySearch","target","htmlFor","role","aria-controls","aria-expanded","onFilterSelect","key","onKeyUp","keyCode","resultClick","src","getPlaceIcon","alt","formattedAddress","Component","MapContainer","infoWindowOpen","activeMarker","activePlace","onMarkerClick","marker","placeData","mapProps","Promise","resolve","setCurrentLocation","callback","navigator","geolocation","getCurrentPosition","position","cord","coords","latitude","longitude","setCenter","warn","code","message","enableHighAccuracy","timeout","maximumAge","providerIcon","delivery","provider","sizes","src_SideUI","google","filterdPlaces","dist","tabindex","clickableIcons","fullscreenControl","mapTypeControl","onReady","bind","zoom","animation","maps","Animation","BOUNCE","visible","onClose","href","url","getDevliveryIcon","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","caches","open","cache","addAll","onUpdate","onSuccess","handleFirstTab","body","classList","add","removeEventListener","addEventListener","handleMouseDownOnce","remove","URL","origin","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","App","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","hamburger","sideUI","contains","style","left","toggle","onHamburgerClick","Map","GoogleApiWrapper","apiKey","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.2f2b7d4b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nvar foursquare = require('react-foursquare')({\r\n  clientID: process.env.REACT_APP_FOURSQUARE_CLIENT_ID,\r\n  clientSecret: process.env.REACT_APP_FOURSQUARE_CLIENT_SECRET\r\n});\r\n\r\nclass SideUI extends Component {\r\n\r\n\r\n  state = {\r\n    activeRadio: '',\r\n    places: this.props.places,\r\n\r\n    filteredArrayReady: false\r\n  }\r\n\r\n\r\n  /*\r\n   This function is called when a user uses the text input field in sideUI\r\n   uses foursquare explore call\r\n  */\r\n  onSearch(input) {\r\n\r\n    this.setState({\r\n      places: this.props.places,\r\n      filteredArrayReady: false\r\n     });\r\n    this.props.onFilterClose();\r\n\r\n    const map = this.props.map;\r\n    const options = {\r\n      ll: `${map.center.lat()}, ${map.center.lng()}`,\r\n      query: input,\r\n      sortByDistance: 1,\r\n    }\r\n\r\n\r\n    foursquare.venues.explore(options)\r\n    .then((results) => {\r\n      this.props.onMapUpdate(results);\r\n      this.props.map.panTo({\r\n        lat: results.response.groups[0].items[0].venue.location.lat,\r\n        lng: results.response.groups[0].items[0].venue.location.lng\r\n      });\r\n    }).catch((response, status) => {\r\n      alert(\"No Search Results\");\r\n      console.log(status);\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  /*\r\n    This function is called when users select from the sideUI table.\r\n    Uses foursquare explore call\r\n  */\r\n  onNearbySearch(catagory) {\r\n\r\n    this.setState({\r\n      places: this.props.places,\r\n      filteredArrayReady: false\r\n    });\r\n    this.props.onFilterClose();\r\n\r\n    let options = {\r\n      ll: `${this.props.map.center.lat()}, ${this.props.map.center.lng()}`,\r\n      radius: '1000',\r\n    }\r\n\r\n    switch (catagory) {\r\n      case 'food':\r\n        this.setState({ activeRadio: 'food' });\r\n        options.section = 'food';\r\n        break;\r\n      case 'arts':\r\n        this.setState({ activeRadio: 'arts' });\r\n        options.section = 'arts';\r\n        break;\r\n      case 'shopping':\r\n        this.setState({ activeRadio: 'shops' });\r\n        options.section = 'shops';\r\n        break;\r\n      case 'popular':\r\n        this.setState({ activeRadio: 'trending' });\r\n        options.section = 'trending';\r\n        break;\r\n      default:\r\n        alert(\"Error in Filter Search\");\r\n    }\r\n\r\n    foursquare.venues.explore(options)\r\n    .then((results) => {\r\n      this.props.onMapUpdate(results);\r\n    })\r\n    .catch((error) => {\r\n      alert(\"No nearby results for that catagory\")\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n// Function is called when a result is selected.\r\n  resultClick(place) {\r\n    this.props.map.panTo({\r\n      lat: place.venue.location.lat,\r\n      lng: place.venue.location.lng\r\n    });\r\n    this.props.onResultClick(place);\r\n  }\r\n\r\n  /*\r\n    This is a helper function for getting a place icon from the foursquare api\r\n    to grab a picture from foursquare, you must connect a prefix api call, the\r\n    diminsions of the image and the sulfix of the api call. Additionally \"bg_\"\r\n    is used to specify that the icon has a background.\r\n  */\r\n  getPlaceIcon(place) {\r\n    if(place.venue.categories.length > 0) {\r\n      const placeIcon = place.venue.categories[0].icon;\r\n      const iconUrl = `${placeIcon.prefix}bg_64${placeIcon.suffix}`;\r\n      return(iconUrl);\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  onFilterSelect(filterOption) {\r\n    if(filterOption === 'No Filter') {\r\n      this.setState({\r\n        filteredArrayReady: false,\r\n        places: this.props.places\r\n      });\r\n      this.props.onFilterClose();\r\n    } else {\r\n      const filteredArray = this.props.places.filter( (place) => place.venue.categories[0].name.includes(filterOption));\r\n      this.setState({\r\n        filteredArrayReady: true,\r\n        places: filteredArray\r\n      });\r\n      this.props.onFilterUpdate(filteredArray);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let placeArray;\r\n    if(this.state.filteredArrayReady) {\r\n      placeArray = this.state.places;\r\n    } else {\r\n      placeArray = this.props.places;\r\n    }\r\n\r\n    return (\r\n      <div id=\"sideUI\">\r\n        <div className=\"mainUISection\">\r\n          <h1 tabIndex=\"0\">What would you like to search?</h1>\r\n          <form>\r\n            <input\r\n              className=\"searchInput\"\r\n              type=\"text\"\r\n              placeholder=\"Ex. Tacos, Movies, Parks\"\r\n            />\r\n            <input\r\n              aria-label=\"Search button\"\r\n              className=\"searchSubmitBtn\"\r\n              value=\"Search\"\r\n              type=\"submit\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.onSearch(document.querySelector('.searchInput').value);\r\n              }} />\r\n          </form>\r\n\r\n          <h2 tabIndex=\"0\">Search Nearby results by type:</h2>\r\n          <form onChange={ (e) => this.onNearbySearch(e.target.value) }>\r\n            <table id=\"inputTable\">\r\n              <tbody>\r\n                <tr>\r\n                  <td tabIndex=\"0\">\r\n                    <label htmlFor=\"food\">Food</label>\r\n                    <input type=\"radio\" name=\"searchType\" id=\"food\" value=\"food\" />\r\n                  </td>\r\n                  <td tabIndex=\"0\">\r\n                    <label htmlFor=\"arts\">Artistic</label>\r\n                    <input type=\"radio\" name=\"searchType\" id=\"arts\" value=\"arts\" />\r\n                  </td>\r\n                  <td tabIndex=\"0\">\r\n                    <label htmlFor=\"popular\">Popular Locations</label>\r\n                    <input type=\"radio\" name=\"searchType\" id=\"popular\" value=\"popular\" />\r\n                  </td>\r\n                  <td tabIndex=\"0\">\r\n                    <label htmlFor=\"shopping\">Shopping</label>\r\n                    <input type=\"radio\" name=\"searchType\" id=\"shopping\" value=\"shopping\" />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n\r\n          {\r\n            (this.state.activeRadio === 'food') ? (\r\n              <div>\r\n                <h3 tabIndex=\"0\">Filter Food by Cuisine:</h3>\r\n                <select role=\"combobox\" aria-controls=\"\" aria-expanded onChange={(e) => this.onFilterSelect(e.target.value)}>\r\n                  <option>No Filter</option>\r\n                  <option>Italian</option>\r\n                  <option>Pizza</option>\r\n                  <option>American</option>\r\n                  <option>Mexican</option>\r\n                  <option>Sushi</option>\r\n                </select>\r\n              </div>\r\n            ):(\"\")\r\n          }\r\n          {\r\n            (this.state.activeRadio === 'arts') ? (\r\n              <div>\r\n                <h3 tabIndex=\"0\">Filter Venues by Type:</h3>\r\n                <select role=\"combobox\" aria-controls=\"\" aria-expanded onChange={(e) => this.onFilterSelect(e.target.value)} >\r\n                  <option>No Filter</option>\r\n                  <option>Dance</option>\r\n                  <option>Theater</option>\r\n                  <option>Music Venue</option>\r\n                  <option>Art Gallery</option>\r\n                  <option>Museum</option>\r\n                </select>\r\n              </div>\r\n            ):(\"\")\r\n          }\r\n          {\r\n            (this.state.activeRadio === 'shops') ? (\r\n              <div>\r\n                <h3 tabIndex=\"0\">Filter Shops by Type:</h3>\r\n                <select onChange={(e) => this.onFilterSelect(e.target.value)}>\r\n                  <option>No Filter</option>\r\n                  <option>Bookstore</option>\r\n                  <option>Shopping Mall</option>\r\n                  <option>Cosmetics Shop</option>\r\n                  <option>Clothing Store</option>\r\n                  <option>Grocery Store</option>\r\n                </select>\r\n              </div>\r\n            ):(\"\")\r\n          }\r\n\r\n          <h2 tabIndex=\"0\">Results:</h2>\r\n          <div className=\"resultsContainer\">\r\n            {\r\n              (placeArray.length === 0) ? (\r\n                <p>No results found</p>\r\n              ) : (\"\")\r\n            }\r\n            {\r\n              placeArray.map( (place) => (\r\n              <div\r\n                tabIndex=\"0\"\r\n                key={place.venue.id}\r\n                className=\"result\"\r\n                onKeyUp={(e) => {\r\n                  if(e.keyCode === 13) {\r\n                    this.resultClick(place);\r\n                  }\r\n                }}\r\n                onClick={() => {\r\n                  this.resultClick(place);\r\n                }}\r\n              >\r\n              <img\r\n                tabIndex=\"0\"\r\n                className=\"businessImage\"\r\n                src={this.getPlaceIcon(place)}\r\n                alt={place.venue.name}\r\n              />\r\n                <div className='businessInfo'>\r\n                  <h3 tabIndex=\"0\" className=\"businessName\">{place.venue.name}</h3>\r\n                  <p>{\r\n                      (place.venue.categories.length > 0) ? (\r\n                        place.venue.categories[0].name\r\n                      ):(\"\")\r\n                    }</p>\r\n                  <p tabIndex=\"0\" className=\"businessAddress\">\r\n                    {place.venue.location.formattedAddress}\r\n                  </p>\r\n                  <p className='businessOpen'>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideUI\r\n","import React, { Component } from 'react';\r\nimport {Map, Marker, InfoWindow} from 'google-maps-react';\r\nimport SideUI from './SideUI.js';\r\n\r\nvar foursquare = require('react-foursquare')({\r\n  clientID: process.env.REACT_APP_FOURSQUARE_CLIENT_ID,\r\n  clientSecret: process.env.REACT_APP_FOURSQUARE_CLIENT_SECRET\r\n});\r\n\r\n\r\nclass MapContainer extends Component {\r\n\r\n  state = {\r\n    places: [],\r\n    map: {},\r\n\r\n    infoWindowOpen: false,\r\n    activeMarker: {},\r\n    activePlace: {},\r\n\r\n  }\r\n\r\n  // This function will asign a marker as 'active', so that its' data can\r\n  // be made avalible to other components, like info window\r\n  onMarkerClick = (props, marker, e) => {\r\n    this.setState({\r\n      activePlace: props.placeData,\r\n      infoWindowOpen: true,\r\n      activeMarker: marker,\r\n\r\n      filteredArray: [],\r\n\r\n      filteredArrayReady: false\r\n    });\r\n  }\r\n\r\n  /*\r\n    When the google map is ready, it will attempt to get the current location\r\n    of the device and then preform a local search for places that may be\r\n    of interest.\r\n   */\r\n  onReady(mapProps, map) {\r\n    new Promise((resolve) => {\r\n      this.setCurrentLocation(map, resolve)\r\n    })\r\n    .then(() => {\r\n      this.setState({\r\n        map: map\r\n      });\r\n      const options = {\r\n        ll: `${map.center.lat()}, ${map.center.lng()}`,\r\n        radius: '1000',\r\n      }\r\n\r\n      foursquare.venues.explore(options)\r\n      .then( (results) => {\r\n        this.setState({\r\n          places: results.response.groups[0].items\r\n        })\r\n      })\r\n      .catch( (error) => {\r\n          alert(\"Error in Nearby Search\");\r\n          console.log(error);\r\n      });\r\n    });\r\n  }\r\n\r\n /*\r\n   Sets the center location for the map.\r\n\r\n   If geolocation is not avalible for this browser or access is denied, the\r\n   default google maps location, san fransisco, CA will be used.\r\n */\r\n  setCurrentLocation(map, callback) {\r\n\r\n    let options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    function error(error) {\r\n      alert('Geolocation Serivce Failed, using default location');\r\n      console.warn(`ERROR(${error.code}): ${error.message}`);\r\n    }\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let cord = position.coords;\r\n        let location = {\r\n          lat: cord.latitude,\r\n          lng: cord.longitude\r\n        };\r\n        map.setCenter(location);\r\n        callback();\r\n      }, error, options);\r\n    } else {\r\n      alert('Geolocation Unavalible, using default location');\r\n      console.log('Geolocation Unavalible, using default location');\r\n      callback();\r\n    }\r\n  }\r\n\r\n  getDevliveryIcon(place) {\r\n    const providerIcon = place.venue.delivery.provider.icon;\r\n    const iconUrl = `${providerIcon.prefix}${providerIcon.sizes[0]}${providerIcon.name}`;\r\n    return(iconUrl);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let placeArray;\r\n    if(this.state.filteredArrayReady) {\r\n      placeArray = this.state.filteredArray;\r\n    } else {\r\n      placeArray = this.state.places;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <SideUI\r\n          google={this.props.google}\r\n          places={this.state.places}\r\n          map={this.state.map}\r\n          onFilterClose={ () => this.setState({ filteredArrayReady: false }) }\r\n          onFilterUpdate={ (filterdPlaces) => this.setState({\r\n            filteredArray: filterdPlaces,\r\n            filteredArrayReady: true\r\n          })}\r\n          onMapUpdate={ (places) => this.setState({places: places.response.groups[0].items }) }\r\n          onResultClick={ (place) => {\r\n            this.setState({\r\n              activePlace: place.venue,\r\n              infoWindowOpen: false\r\n             });\r\n          }}\r\n          />\r\n        <Map\r\n          role=\"application\"\r\n          tabindex=\"0\"\r\n          clickableIcons={true}\r\n          fullscreenControl={false}\r\n          mapTypeControl={false}\r\n          onReady={this.onReady.bind(this)}\r\n          google={this.props.google}\r\n          zoom={16}\r\n          >\r\n          {\r\n            placeArray.map( (place) =>\r\n              {\r\n                return (\r\n                  <Marker\r\n                    tabIndex=\"0\"\r\n                    key={place.venue.id}\r\n                    placeData={place}\r\n                    onClick={this.onMarkerClick}\r\n                    position={{\r\n                      lat: place.venue.location.lat,\r\n                      lng: place.venue.location.lng\r\n                    }}\r\n                    animation={\r\n                      (this.state.activePlace === place.venue) ? (\r\n                          this.props.google.maps.Animation.BOUNCE\r\n                        ):(\"\")\r\n                    }\r\n                    name={place.venue.name}\r\n                    />\r\n                )\r\n              }\r\n             )\r\n          }\r\n          <InfoWindow\r\n            role=\"dialog\"\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.infoWindowOpen}\r\n            onClose={ () => this.setState({\r\n              infoWindowOpen: false,\r\n              activePlace: {},\r\n              activeMarker: {},\r\n            })}\r\n          >\r\n          {\r\n            (this.state.places.includes(this.state.activePlace)) ? (\r\n\r\n              <div className=\"infoWindow\">\r\n                <h3 tabIndex=\"0\">{this.state.activePlace.venue.name}</h3>\r\n                {\r\n                  (this.state.activePlace.venue.delivery) ? (\r\n                    <div className=\"deliveryOptions\">\r\n                      <p tabIndex=\"0\" className=\"deliveryMessage\">\r\n                        {\r\n                          `Delivery options provided by\r\n                          ${this.state.activePlace.venue.delivery.provider.name}!\r\n                          Click the icon on the left for more info`\r\n                        }\r\n                      </p>\r\n                      <a tabIndex=\"0\" href={this.state.activePlace.venue.delivery.url}>\r\n                        <img\r\n                          className=\"deliveryLinkImg\"\r\n                          tabIndex=\"0\"\r\n                          src={this.getDevliveryIcon(this.state.activePlace)}\r\n                          alt={\r\n                            `Delivery link from\r\n                            ${this.state.activePlace.venue.delivery.provider.name}`\r\n                          }\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  ):(\"\")\r\n                }\r\n                <p tabIndex=\"0\" className=\"infoWindowCatagory\">\r\n                  {\r\n                    (this.state.activePlace.venue.categories.length > 0) ? (\r\n                      this.state.activePlace.venue.categories[0].name\r\n                    ):(\"\")\r\n                  }\r\n                </p>\r\n                <p tabIndex=\"0\" className=\"infoWindowAddress\">\r\n                  {this.state.activePlace.venue.location.formattedAddress}\r\n                </p>\r\n              </div>\r\n            ):(<div></div>)\r\n          }\r\n          </InfoWindow>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapContainer\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              caches.open('googleMap-v1').then(function(cache) {\n                return cache.addAll([\n                  './',\n                  './App.css',\n                  './Map.js',\n                  './index.css',\n                  './index.js',\n                  './Map.js',\n                  './SideUI.js',\n                  './utils/GoogleApiHelpers.js'\n                ]);\n              });\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './Map.js';\nimport {GoogleApiWrapper} from 'google-maps-react';\nimport { register } from './serviceWorker.js';\n\n//Code to use envrirnment variables\nrequire('dotenv').config()\n// Registering service worker\nregister();\n\n// These two functions to handle user tabbing cases.\n// If the user is using tabs to use the app then focus is present.\n// If the user is not using tabs, then\nfunction handleFirstTab(e) {\n  if (e.keyCode === 9) {\n    document.body.classList.add('user-is-tabbing');\n\n    window.removeEventListener('keydown', handleFirstTab);\n    window.addEventListener('mousedown', handleMouseDownOnce);\n  }\n}\n\nfunction handleMouseDownOnce() {\n  document.body.classList.remove('user-is-tabbing');\n\n  window.removeEventListener('mousedown', handleMouseDownOnce);\n  window.addEventListener('keydown', handleFirstTab);\n}\n\nwindow.addEventListener('keydown', handleFirstTab);\n\nexport class App extends Component {\n\n  // This function handles sideUI functionality.\n  onHamburgerClick() {\n    let hamburger = document.querySelector('.hamburger');\n    let sideUI = document.querySelector('#sideUI');\n    if(hamburger.classList.contains('cross')) {\n      sideUI.style.left = '-50%';\n      hamburger.style.left = '0%';\n    } else {\n      sideUI.style.left = '0px';\n      hamburger.style.left = '50%';\n    }\n    hamburger.classList.toggle('cross');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"topSection\">\n          <div role=\"button\" aria-label=\"Menu Toggle\" tabIndex=\"0\" className=\"hamburger cross\" onClick={this.onHamburgerClick}>\n            <div className=\"bar1\"></div>\n            <div className=\"bar2\"></div>\n            <div className=\"bar3\"></div>\n          </div>\n          <h1  tabIndex=\"0\">Neighborhood Map</h1>\n        </div>\n        <Map\n          google={this.props.google} />\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY\n})(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}